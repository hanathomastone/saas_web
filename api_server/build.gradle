plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
//    id 'com.ewerk.gradle.plugins.querydsl-apt:5.0.0:jakarta' version '1.0.10'
}

group = 'com.kaii'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExtensions
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
    docsDir = file('build/resources/main/static/docs')
}

asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    baseDirFollowsSourceFile()
    dependsOn test
}

asciidoctor.doFirst {
    delete docsDir
}

test {
    useJUnitPlatform()
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("${asciidoctor.outputDir}")
    into file(docsDir)
}

bootJar {
    dependsOn copyDocument
}


// querydsl 설정
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}
clean.doLast {
    file(querydslDir).deleteDir()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'commons-codec:commons-codec:1.15'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // log4j
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'org.apache.logging.log4j:log4j-to-slf4j'

    // aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // cloud-config
    implementation 'org.springframework.security:spring-security-rsa:1.0.11.RELEASE'
//    implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-client', version: '4.0.3'

    // spring jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // jdbc
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
    // mysql
    runtimeOnly("com.mysql:mysql-connector-j")
    implementation 'mysql:mysql-connector-java:8.0.33'
    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jdk 11 이상 xml bind
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    // spring rest docs
    testImplementation('junit:junit:4.13')
    testImplementation 'org.springframework.security:spring-security-test'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // json
    implementation group: 'org.json', name: 'json', version: '20180813'

    // s3
    implementation 'software.amazon.awssdk:s3:2.25.46'
    implementation 'software.amazon.awssdk:sts:2.25.46'
    implementation 'software.amazon.awssdk:auth:2.25.32'
    implementation 'software.amazon.awssdk:regions:2.25.32'

    // modelmapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'
    implementation 'software.amazon.awssdk:s3:2.25.46'
    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

}